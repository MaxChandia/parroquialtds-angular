"""
Django settings for pltds project.

Generated by 'django-admin startproject' using Django 3.1.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv # Asegúrate de que esto esté importado

# Carga las variables de entorno desde el archivo .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2teq7sb!(3$kz+(muxcb%lm+6!br^(=hqw#-x%-7c(u^r+o$@%' # Esta es tu SECRET_KEY de Django

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djongo',
    'myapp',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # CORS_Middleware debe ir lo más arriba posible, preferiblemente después de SecurityMiddleware
    'corsheaders.middleware.CorsMiddleware', # Asegúrate de que esté aquí
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pltds.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pltds.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'parroquia',
        'CLIENT': {
            'host':'mongodb+srv://maximilianochandiaf:parroquia@cluster0.ymrmb.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0',
            'authSource': 'admin',
            'username': 'maximilianochandiaf',
            'password': 'parroquia',
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# CORS Configuration
# CORS_ALLOW_ALL_ORIGINS = True es útil para desarrollo, pero en producción
# deberías especificar CORS_ALLOWED_ORIGINS
CORS_ALLOW_ALL_ORIGINS = True
# Si prefieres especificar orígenes (más seguro para producción):
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:4200", # La URL de tu frontend Angular
#     # Agrega otras URLs de frontend si las tienes
# ]


# JWT Configuration
# Obtiene la clave secreta del JWT desde las variables de entorno
# El segundo argumento es un valor de respaldo si la variable de entorno no se encuentra.
# En producción, se recomienda asegurarse de que la variable de entorno siempre esté definida.
JWT_SECRET = os.getenv('JWT_SECRET', 'TU_CLAVE_SECRETA_DE_RESPALDO_MUY_LARGA_AQUI')
JWT_ALGORITHM = 'HS256'
JWT_EXPIRATION_HOURS = 24